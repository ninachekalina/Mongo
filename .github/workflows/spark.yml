name: Spark CI

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/spark.yml'
  pull_request:
    branches:
      - 'main'
    paths:
      - '.github/workflows/spark.yml'
  workflow_dispatch:
    inputs:
      query_key:
        description: 'key to extract query from artifact'
        required: false

jobs:
  spark-submit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Spark
        uses: vemonet/setup-spark@v1
        with:
          spark-version: '3.5.3'
          hadoop-version: '3'

      - name: Check Spark version
        run: spark-submit --version

      - name: Install Kaggle CLI
        run: |
          pip install kaggle

      - name: Download Netflix dataset from Kaggle
        env:
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
        run: |
          mkdir -p data
          kaggle datasets download -d chekalinanina/netflix-titles -p data --unzip
          ls -lah data/

      - name: Check downloaded files
        run: ls -lah data/

      - name: Run Spark operations with PySpark
        run: |
          # Пример операции с PySpark
          echo "from pyspark.sql import SparkSession" > /tmp/spark_query.py
          echo "spark = SparkSession.builder.appName('Netflix').getOrCreate()" >> /tmp/spark_query.py
          echo "df = spark.read.csv('/data/netflix_titles.csv', header=True, inferSchema=True)" >> /tmp/spark_query.py
          echo "df.show()" >> /tmp/spark_query.py
          spark-submit /tmp/spark_query.py

      - name: Save Spark results to JSON
        run: |
          OUTPUT_FILE="/tmp/spark_output.json"
          echo "{" > $OUTPUT_FILE

          echo '"top_titles":' >> $OUTPUT_FILE
          spark-submit /tmp/spark_query.py | jq -R -s -c 'split("\n")[:-1]' >> $OUTPUT_FILE
          echo "," >> $OUTPUT_FILE

          echo '"average_duration":' >> $OUTPUT_FILE
          spark-submit /tmp/spark_query.py | jq -R -s -c 'split("\n")[:-1]' >> $OUTPUT_FILE
          echo "," >> $OUTPUT_FILE

          echo '"release_year_count":' >> $OUTPUT_FILE
          spark-submit /tmp/spark_query.py | jq -R -s -c 'split("\n")[:-1]' >> $OUTPUT_FILE
          echo "," >> $OUTPUT_FILE

          echo "}" >> $OUTPUT_FILE

      - name: Upload Spark results as JSON
        uses: actions/upload-artifact@v4
        with:
          name: spark-output
          path: /tmp/spark_output.json
